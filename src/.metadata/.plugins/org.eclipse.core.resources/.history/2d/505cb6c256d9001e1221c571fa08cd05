package tp1.control.commands;

import tp1.logic.GameModel;
import tp1.logic.Move;
import tp1.logic.NotAllowedMoveException;
import tp1.logic.OffWorldException;
import tp1.view.Messages;

public class MoveCommand extends Command {

	private Move move;

	public MoveCommand() {}

	protected MoveCommand(Move move) {
		this.move = move;
	}

	@Override
	protected String getName() {
		return Messages.COMMAND_MOVE_NAME;
	}

	@Override
	protected String getShortcut() {
		return Messages.COMMAND_MOVE_SHORTCUT;
	}

	@Override
	protected String getDetails() {
		return Messages.COMMAND_MOVE_DETAILS;
	}

	@Override
	protected String getHelp() {
		return Messages.COMMAND_MOVE_HELP;
	}

	@Override
	public boolean execute(GameModel game) throws CommandExecuteException{
		boolean execution = true;
		try {
			game.move(this.move);
			return execution;
		}
		catch(OffWorldException | NotAllowedMoveException e){
			throw new CommandExecuteException("",e);
		}
	}

	@Override
	public Command parse(String[] commandWords)  throws CommandParseException{
		Move movi = null;
		if(commandWords.length != 2) {
			 throw new CommandParseException(Messages.COMMAND_INCORRECT_PARAMETER_NUMBER);
		}
		 try {
		        movi = Move.parse(commandWords[1]);
		        if(movi == null) {	
		        	throw new IllegalArgumentException();
		        }
		        return new MoveCommand(movi);
		 } catch (IllegalArgumentException e) {
		        throw new CommandParseException(Messages.DIRECTION_ERROR + commandWords[1]);
		 }
	}

}

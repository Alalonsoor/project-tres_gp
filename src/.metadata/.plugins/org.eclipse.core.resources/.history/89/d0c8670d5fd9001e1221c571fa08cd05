package gp.commands;

import gp.logic.Game;
import gp.exceptions.CommandExecuteException;
import gp.exceptions.CommandParseException;
import gp.exceptions.FullColumnException;
import gp.exceptions.OffWorldException;
import gp.view.Messages;

public class PlaceCommand extends Command {

	public PlaceCommand() {}

	protected PlaceCommand() {
	}

	@Override
	protected String getName() {
		return Messages.COMMAND_PLACE_NAME;
	}

	@Override
	protected String getShortcut() {
		return Messages.COMMAND_PLACE_SHORTCUT;
	}

	@Override
	protected String getDetails() {
		return Messages.COMMAND_PLACE_DETAILS;
	}

	@Override
	protected String getHelp() {
		return Messages.COMMAND_PLACE_HELP;
	}

	@Override
	public boolean execute(Game game) throws CommandExecuteException{
		boolean execution = true;
		try {
			game.place(0);//solucionatlo
			return execution;
		}
		catch(OffWorldException | FullColumnException e){
			throw new CommandExecuteException("",e);
		}
	}

	@Override
	public Command parse(String[] commandWords)  throws CommandParseException{
		Move movi = null;
		if(commandWords.length != 2) {
			 throw new CommandParseException(Messages.COMMAND_INCORRECT_PARAMETER_NUMBER);
		}
		 try {
		        movi = Move.parse(commandWords[1]);
		        if(movi == null) {	
		        	throw new IllegalArgumentException();
		        }
		        return new MoveCommand(movi);
		 } catch (IllegalArgumentException e) {
		        throw new CommandParseException(Messages.DIRECTION_ERROR + commandWords[1]);
		 }
	}

}
